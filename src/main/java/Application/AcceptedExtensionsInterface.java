/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Application;

import Client.Client;
import java.util.ArrayList;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author maybeitsmica
 */
public class AcceptedExtensionsInterface extends javax.swing.JFrame {

    private Client client;
    /**
     * Creates new form AcceptedExtensionsInterface
     */
    public AcceptedExtensionsInterface(Client client) {
        initComponents();
        this.client = client;
    }

    private void getExtensions(){
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pngExtension = new javax.swing.JCheckBox();
        txtExtension = new javax.swing.JCheckBox();
        jpgExtension = new javax.swing.JCheckBox();
        pdfExtension = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(148, 205, 142));

        pngExtension.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pngExtension.setForeground(new java.awt.Color(0, 0, 0));
        pngExtension.setText("PNG");
        pngExtension.setBorder(null);
        pngExtension.setContentAreaFilled(false);
        pngExtension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pngExtensionActionPerformed(evt);
            }
        });

        txtExtension.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtExtension.setForeground(new java.awt.Color(0, 0, 0));
        txtExtension.setText("TXT");
        txtExtension.setBorder(null);
        txtExtension.setBorderPainted(true);
        txtExtension.setContentAreaFilled(false);
        txtExtension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExtensionActionPerformed(evt);
            }
        });

        jpgExtension.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jpgExtension.setForeground(new java.awt.Color(0, 0, 0));
        jpgExtension.setText("JPG");
        jpgExtension.setBorder(null);
        jpgExtension.setContentAreaFilled(false);
        jpgExtension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpgExtensionActionPerformed(evt);
            }
        });

        pdfExtension.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pdfExtension.setForeground(new java.awt.Color(0, 0, 0));
        pdfExtension.setText("PDF");
        pdfExtension.setBorder(null);
        pdfExtension.setBorderPainted(true);
        pdfExtension.setContentAreaFilled(false);
        pdfExtension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfExtensionActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(179, 132, 152));
        jButton1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Save");
        jButton1.setBorder(null);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveExtensions(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pdfExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpgExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pngExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(pngExtension)
                .addGap(18, 18, 18)
                .addComponent(jpgExtension)
                .addGap(18, 18, 18)
                .addComponent(txtExtension)
                .addGap(18, 18, 18)
                .addComponent(pdfExtension)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pngExtensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pngExtensionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pngExtensionActionPerformed

    private void txtExtensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExtensionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExtensionActionPerformed

    private void jpgExtensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpgExtensionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpgExtensionActionPerformed

    private void pdfExtensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfExtensionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdfExtensionActionPerformed

    private void saveExtensions(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveExtensions
        ArrayList<FileFilter> extensions = new ArrayList<FileFilter>();
        if(jpgExtension.isSelected()){
            extensions.add(new FileNameExtensionFilter("JPG image", "jpg"));
        }
        else if(pngExtension.isSelected()){
            extensions.add(new FileNameExtensionFilter("PNG image", "png"));
        }
        else if(txtExtension.isSelected()){
            extensions.add(new FileNameExtensionFilter("TXT file", "txt"));
        }
        else if(pdfExtension.isSelected()){
            extensions.add(new FileNameExtensionFilter("PDF file", "pdf"));
        }
        client.changeAcceptedExtensions(extensions);
        
    }//GEN-LAST:event_saveExtensions

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jpgExtension;
    private javax.swing.JCheckBox pdfExtension;
    private javax.swing.JCheckBox pngExtension;
    private javax.swing.JCheckBox txtExtension;
    // End of variables declaration//GEN-END:variables
}
